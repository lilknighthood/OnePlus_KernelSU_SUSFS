name: Build Kernel Release

on:
  workflow_dispatch:
    inputs:
      compiler:
        description: 'Select a compiler'
        required: true
        default: 'clang'
        type: choice
        options:
          - clang
          - gcc
      defconfig:
        description: 'Select Kernel Profile'
        required: true
        default: 'per_defconfig'
        type: choice
        options:
          - per_defconfig
          - per_powersave_defconfig
      ksu_enable:
        description: 'Enable KernelSU'
        required: true
        default: true
        type: boolean
      anykernel:
        description: 'Build AnyKernel3 zip'
        required: true
        default: true
        type: boolean

jobs:
  build_kernel:
    name: Build Kernel with ${{ github.event.inputs.defconfig }}
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Prepare environment
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends bc build-essential zip curl libstdc++6 git wget libssl-dev libncurses5-dev bison flex
          
      - name: Setup Build Variables
        run: |
          echo "ARCH=arm64" >> $GITHUB_ENV
          echo "KBUILD_BUILD_USER=lilknighthood" >> $GITHUB_ENV
          echo "KBUILD_BUILD_HOST=GitHub-Actions" >> $GITHUB_ENV
          echo "TZ=Asia/Ho_Chi_Minh" >> $GITHUB_ENV
          if [ "${{ github.event.inputs.compiler }}" == "clang" ]; then
            echo "CC=clang" >> $GITHUB_ENV
            echo "CROSS_COMPILE=aarch64-linux-gnu-" >> $GITHUB_ENV
            echo "CROSS_COMPILE_ARM32=arm-linux-gnueabi-" >> $GITHUB_ENV
          else
            echo "CROSS_COMPILE=/opt/gcc64/bin/aarch64-elf-" >> $GITHUB_ENV
            echo "CROSS_COMPILE_ARM32=/opt/gcc32/bin/arm-eabi-" >> $GITHUB_ENV
          fi

      - name: Setup Toolchain
        run: |
          if [ "${{ github.event.inputs.compiler }}" == "clang" ]; then
            git clone --depth=1 https://github.com/Neutron-Toolchains/proton-clang.git clang-toolchain
            echo "PATH=/home/runner/work/OnePlus_KernelSU_SUSFS/OnePlus_KernelSU_SUSFS/clang-toolchain/bin:$PATH" >> $GITHUB_ENV
          else
            sudo mkdir /opt/gcc64
            sudo mkdir /opt/gcc32
            git clone --depth=1 https://github.com/mvaisakh/gcc-arm64.git /opt/gcc64
            git clone --depth=1 https://github.com/mvaisakh/gcc-arm.git /opt/gcc32
          fi
          
      - name: Setup KernelSU
        if: github.event.inputs.ksu_enable == 'true'
        run: |
          curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -
          source "scripts/setup-ksu.sh"

      - name: Build Kernel
        run: |
          make O=out ${{ github.event.inputs.defconfig }}
          make O=out -j$(nproc --all)

      - name: Build AnyKernel3 Zip
        if: github.event.inputs.anykernel == 'true'
        run: |
          git clone --depth=1 https://github.com/osm0sis/AnyKernel3
          cp out/arch/arm64/boot/Image AnyKernel3/
          cd AnyKernel3
          ZIP_NAME="Kernel-${{ github.event.inputs.defconfig }}_$(date +'%Y%m%d-%H%M').zip"
          zip -r9 "${ZIP_NAME}" * -x .git README.md

      - name: Upload to Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "AnyKernel3/*.zip"
          name: "Kernel Release - ${{ github.event.inputs.defconfig }} - $(date +'%Y-%m-%d %H:%M')"
          tag: "${{ github.event.inputs.defconfig }}-${{ github.run_id }}"
          token: ${{ secrets.GITHUB_TOKEN }}
          allowUpdates: true
